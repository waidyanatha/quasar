MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([10.0, 2, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([20.0, 2, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([30.0, 2, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([40.0, 2, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([50.0, 2, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([10.0, 3, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([20.0, 3, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([30.0, 3, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([40.0, 3, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([50.0, 3, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([10.0, 4, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([20.0, 4, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([30.0, 4, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([40.0, 4, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([50.0, 4, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([10.0, 5, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([20.0, 5, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([30.0, 5, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([40.0, 5, 'haversine', 300])
MEANSHIFT: dict_keys(['distance_km', 'minimum_samples', 'metric', 'max_iter'])
dict_values([50.0, 5, 'haversine', 300])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([10.0, 2, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([20.0, 2, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([30.0, 2, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([40.0, 2, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([50.0, 2, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([10.0, 3, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([20.0, 3, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([30.0, 3, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([40.0, 3, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([50.0, 3, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([10.0, 4, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([20.0, 4, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([30.0, 4, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([40.0, 4, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([50.0, 4, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([10.0, 5, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([20.0, 5, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([30.0, 5, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([40.0, 5, 'precomputed'])
AGGLOMERATIVE: dict_keys(['distance_km', 'minimum_samples', 'metric'])
dict_values([50.0, 5, 'precomputed'])
